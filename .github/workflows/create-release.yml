
name: Create Release

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Get version from manifest.json
        id: get_version
        run: |
          VERSION=$(jq -r .version manifest.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          RELEASE=$(gh release view "v$VERSION" --json tagName -q .tagName || true)
          if [ "$RELEASE" = "v$VERSION" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release if not exists
        if: steps.check_release.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          gh release create "v$VERSION" --title "v$VERSION" --notes "Release v$VERSION" main.js manifest.json styles.css
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output message if release exists
        if: steps.check_release.outputs.exists == 'true'
        run: echo "Release v${{ steps.get_version.outputs.version }} already exists. Skipping creation."
